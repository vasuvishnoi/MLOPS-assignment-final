# -*- coding: utf-8 -*-
"""quantize.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k4lcTznM4_rKAuT9KmcRwApN6u5wBI0Y
"""

import numpy as np
import joblib
from src.utils import load_model

if __name__ == "__main__":
    model = load_model("linear_model.joblib")

    coef = model.coef_
    intercept = model.intercept_

    # Save original params
    joblib.dump({"coef": coef, "intercept": intercept}, "models/unquant_params.joblib")

    # Manual quantization to uint8
    coef_min, coef_max = coef.min(), coef.max()
    coef_quant = ((coef - coef_min) / (coef_max - coef_min) * 255).astype(np.uint8)
    intercept_quant = np.uint8(intercept * 10)  # simple scaling

    # Save quantized params
    joblib.dump(
        {
            "coef": coef_quant,
            "intercept": intercept_quant,
            "coef_min": coef_min,
            "coef_max": coef_max,
        },
        "models/quant_params.joblib"
    )

    print("Quantization complete. Params saved in models/")